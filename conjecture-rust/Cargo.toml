[package]
name = "conjecture-rust"
version = "2.0.0"
edition = "2021"
description = "Modern Rust port of Python Hypothesis's conjecture engine with perfect parity"
license = "MPL-2.0"
authors = ["Hypothesis Development Team"]
homepage = "https://hypothesis.works/"
repository = "https://github.com/HypothesisWorks/hypothesis"
keywords = ["testing", "property-based", "hypothesis", "conjecture", "fuzzing"]
categories = ["development-tools::testing"]

[lib]
name = "conjecture"

[[bin]]
name = "database_integration_test"
path = "database_integration_test.rs"

[[bin]]
name = "test_dfa_verification"
path = "test_dfa_verification.rs"

[[bin]]
name = "test_float_encoding_demo"
path = "test_float_encoding_demo.rs"

[[bin]]
name = "choice_sequence_demo"
path = "choice_sequence_demo.rs"

[[bin]]
name = "test_core_choice_sequence_capability"
path = "test_core_choice_sequence_capability.rs"

[[bin]]
name = "simple_capability_test"
path = "simple_capability_test.rs"

[[bin]]
name = "provider_type_system_capability_demo"
path = "provider_type_system_capability_demo.rs"

[dependencies]
# Pure Rust crypto to avoid OpenSSL dependencies (key insight from swift-hypothesis)
sha1 = "0.10"
sha2 = "0.10"
# Logging support
log = "0.4"
# Other core dependencies
rand = "0.8"
rand_chacha = "0.3"
byteorder = "1.4"
lazy_static = "1.4"
once_cell = "1.19"
# For IEEE 754 half precision float support
half = "2.4"
# Database persistence dependencies
serde = { version = "1.0", features = ["derive"] }
hex = "0.4"
thiserror = "1.0"
tempfile = "3.0"
regex = "1.11.1"
# Optional dependencies for features
pyo3 = { version = "0.20", features = ["auto-initialize"], optional = true }

[dev-dependencies]
# For property-based testing of our implementation
proptest = "1.0"
# For benchmarking
criterion = "0.5"
# For database testing
tempfile = "3.0"

[features]
# Python FFI Integration feature
python-ffi = ["pyo3"]

# Benchmarks will be added later
# [[bench]]
# name = "choice_performance"
# harness = false